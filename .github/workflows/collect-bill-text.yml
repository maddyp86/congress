name: Collect Congress Bill Text v2 (119)

on:
  workflow_dispatch: {}
  schedule:
    - cron: "30 9 * * *"

permissions:
  contents: read

env:
  GCS_BUCKET: ${{ secrets.GCS_BUCKET }}
  GCS_PREFIX: ${{ secrets.GCS_PREFIX || 'congress-billtext-xml' }}
  GCP_PROJECT: ${{ secrets.GCP_PROJECT }}
  CONGRESS: "119"
  BILL_TYPES: "hr s hjres sjres hconres sconres hres sres"

jobs:
  collect-and-upload:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install tools
        run: |
          sudo apt-get update -y
          sudo apt-get install -y curl gzip findutils coreutils

      - name: Prepare
        run: |
          set -euo pipefail
          rm -rf data all_urls.txt
          mkdir -p data
          touch all_urls.txt
          echo "Congress: ${CONGRESS}"
          echo "Bill types: ${BILL_TYPES}"

      - name: Fetch XML indexes and collect XML URLs
        run: |
          set -euo pipefail
          USER_AGENT="govinfo-bulk-fetcher/1.0 (+https://your.org)"
          for BT in $BILL_TYPES; do
            IDX="index_${BT}.xml"
            IDX_URL="https://www.govinfo.gov/bulkdata/xml/BILLS/${CONGRESS}/${BT}"
            if curl -fsSL -H "Accept: application/xml" -H "User-Agent: ${USER_AGENT}" "$IDX_URL" -o "$IDX"; then
              grep -Eo 'https?://[^"'"'"'<>[:space:]]+' "$IDX" \
                | grep -Ei '\.xml(\.gz)?$' \
                | sort -u >> all_urls.txt || true
            else
              echo "WARN: failed to fetch index for $BT"
            fi
          done
          sort -u -o all_urls.txt all_urls.txt || true
          echo "Collected $(wc -l < all_urls.txt || echo 0) XML URLs."

      - name: Download XML files
        run: |
          set -euo pipefail
          USER_AGENT="govinfo-bulk-fetcher/1.0 (+https://your.org)"
          while IFS= read -r url; do
            bt="other"
            for candidate in $BILL_TYPES; do
              if echo "$url" | grep -q "/${candidate}/"; then
                bt="$candidate"
                break
              fi
            done
            dest="data/${bt}"
            mkdir -p "$dest"
            fname="$(basename "${url%%\?*}")"
            outpath="${dest}/${fname}"
            if [ -f "$outpath" ]; then
              echo "SKIP exists: $outpath"
              continue
            fi
            n=0; max=3
            until [ $n -ge $max ]; do
              curl -fSL -H "Accept: application/xml" -H "User-Agent: ${USER_AGENT}" --connect-timeout 20 --max-time 300 "$url" -o "$outpath" && break
              n=$((n+1))
              sleep $((n * 2))
            done
            if [ ! -s "$outpath" ]; then
              echo "FAILED: $url"
              rm -f "$outpath" || true
            else
              echo "OK: $outpath"
            fi
          done < all_urls.txt

      - name: Decompress .xml.gz files
        run: |
          set -euo pipefail
          find data -type f -name '*.xml.gz' -print0 | while IFS= read -r -d '' gz; do
            xml="${gz%.gz}"
            if gunzip -c "$gz" > "$xml"; then
              rm -f "$gz"
            fi
          done || true

      - name: Authenticate to GCP
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      - name: Setup gcloud
        uses: google-github-actions/setup-gcloud@v2
        with:
          project_id: ${{ env.GCP_PROJECT }}
          version: '>= 472.0.0'

      - name: Ensure GCS bucket exists
        run: |
          set -euo pipefail
          gsutil ls -b "gs://${GCS_BUCKET}" >/dev/null 2>&1 || gsutil mb -p "${GCP_PROJECT}" "gs://${GCS_BUCKET}"

      - name: Upload bill text to GCS
        run: |
          set -euo pipefail
          PREFIX="${GCS_PREFIX%/}"
          TARGET="${PREFIX:+${PREFIX}/}data"
          echo "Uploading to gs://${GCS_BUCKET}/${TARGET}/"
          gsutil -m rsync -r data "gs://${GCS_BUCKET}/${TARGET}/"

      - name: Summary
        run: |
          set -euo pipefail
          COUNT_XML=$(find data -type f -name '*.xml' | wc -l || echo 0)
          echo "Completed billtext run."
          echo "XML files: ${COUNT_XML}"
          echo "Bucket: ${GCS_BUCKET}"
          echo "Prefix: ${GCS_PREFIX}"
