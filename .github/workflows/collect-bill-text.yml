name: Collect Congress Bill Text (119)

on:
  workflow_dispatch: {}
  schedule:
    - cron: "30 9 * * *" # nightly (09:30 UTC)

concurrency:
  group: collect-congress-billtext
  cancel-in-progress: true

permissions:
  contents: read

env:
  CONGRESSES: ${{ secrets.CONGRESSES || '119' }}
  GCS_BUCKET: ${{ secrets.GCS_BUCKET || 'congress-legislative-data' }}
  GCS_PREFIX: ${{ secrets.GCS_PREFIX || 'congress-billtext-xml' }}
  GCP_PROJECT: ${{ secrets.GCP_PROJECT }}

jobs:
  collect_billtext:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repo
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      - name: Install System Libs
        run: |
          sudo apt-get update -y
          sudo apt-get install -y python3-venv jq unzip rsync curl

      - name: Create venv
        run: |
          python -m venv env
          echo "PYTHON=./env/bin/python" >> $GITHUB_ENV
          echo "PYTHONUNBUFFERED=1" >> $GITHUB_ENV

      - name: Download GovInfo bulkdata XML
        run: |
          set -euo pipefail
          mkdir -p data/119/bills
          BILL_TYPES=(hr s hjres sjres hconres sconres hres sres)
          for bt in "${BILL_TYPES[@]}"; do
            echo "Downloading $bt..."
            mkdir -p "data/119/bills/$bt"
            curl -s "https://www.govinfo.gov/bulkdata/xml/BILLS/119/1/$bt/" \
              | grep -o 'BILLS-119[^"]*\.xml' \
              | while read -r f; do
                  fname=$(basename "$f")
                  curl -s -o "data/119/bills/$bt/$fname" "https://www.govinfo.gov/bulkdata/xml/BILLS/119/1/$bt/$fname"
                done
          done

      - name: Normalize GovInfo XML to data.json
        run: |
          set -euo pipefail
          . env/bin/activate
          $PYTHON - <<'EOF'
          import pathlib, json, re, datetime

          base = pathlib.Path("data/119/bills")
          out_count = 0

          for xml in base.rglob("BILLS-*.xml"):
              fname = xml.stem  # e.g. "BILLS-119hconres10ih"
              m = re.match(r"BILLS-(\d+)([a-z]+)(\d+)([a-z]+)", fname)
              if not m:
                  print("Skipping unrecognized:", fname)
                  continue

              congress, bill_type, num, version = m.groups()
              bill_id = f"{bill_type}{num}-{congress}"

              # Build JSON
              data = {
                  "issued_on": str(datetime.date.today()),  # fallback
                  "version_code": version,
                  "bill_version_id": fname,
                  "bill_id": bill_id,
                  "bill_id_source": "filename",
                  "urls": {
                      "xml": f"https://www.govinfo.gov/content/pkg/{fname}/xml/{fname}.xml",
                      "pdf": f"https://www.govinfo.gov/content/pkg/{fname}/pdf/{fname}.pdf",
                      "html": f"https://www.govinfo.gov/content/pkg/{fname}/html/{fname}.htm",
                  }
              }

              # Write to normalized location
              target = base / bill_type / f"{bill_type}{num}" / "data.json"
              target.parent.mkdir(parents=True, exist_ok=True)
              with target.open("w", encoding="utf-8") as f:
                  json.dump(data, f, indent=2)
              out_count += 1
              print("Wrote:", target)

          print(f"Normalized {out_count} bills")
          EOF

      - name: Build manifest
        run: |
          set -euo pipefail
          COUNT=$(find data/119/bills -name data.json | wc -l)
          jq -n --arg count "$COUNT" '{"file_count": $count|tonumber, "generated": now | todate}' > billtext-manifest.json
          echo "Built manifest with $COUNT bills"

      - name: Authenticate to GCP
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      - name: Setup gcloud
        uses: google-github-actions/setup-gcloud@v2
        with:
          project_id: ${{ env.GCP_PROJECT }}

      - name: Ensure GCS bucket exists
        run: |
          gsutil ls -b "gs://${GCS_BUCKET}" >/dev/null 2>&1 || gsutil mb -p "${GCP_PROJECT}" "gs://${GCS_BUCKET}"

      - name: Upload Bill Text + data.json to GCS
        run: |
          PREFIX="${GCS_PREFIX%/}"
          TARGET_PREFIX="${PREFIX:+${PREFIX}/}data/119/bills"
          echo "Uploading normalized billtext to gs://${GCS_BUCKET}/${TARGET_PREFIX}/"
          gsutil -m rsync -r "data/119/bills" "gs://${GCS_BUCKET}/${TARGET_PREFIX}/"

      - name: Upload manifest to GCS
        run: |
          PREFIX="${GCS_PREFIX%/}"
          GS_PREFIX="${PREFIX:+${PREFIX}/}manifests"
          echo "Uploading manifest file to gs://${GCS_BUCKET}/${GS_PREFIX}/"
          gsutil -m cp -n billtext-manifest.json "gs://${GCS_BUCKET}/${GS_PREFIX}/" || true

      - name: Summary
        run: |
          echo "Completed bulk billtext sync"
          echo "Bucket: ${GCS_BUCKET}"
          echo "Prefix: ${GCS_PREFIX}/data/119/bills"
          echo "Manifest: billtext-manifest.json"
          jq '.' billtext-manifest.json
