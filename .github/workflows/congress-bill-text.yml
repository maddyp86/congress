name: Collect Congress Bill Text (119)

on:
  workflow_dispatch: {}
  schedule:
    - cron: "30 9 * * *" # nightly (09:30 UTC)

concurrency:
  group: collect-congress-billtext
  cancel-in-progress: true

permissions:
  contents: read

env:
  CONGRESSES: ${{ secrets.CONGRESSES || '119' }}
  GCS_BUCKET: ${{ secrets.GCS_BUCKET || 'congress-legislative-data' }}
  GCS_PREFIX: ${{ secrets.GCS_PREFIX || 'congress-billtext-data' }}
  GCP_PROJECT: ${{ secrets.GCP_PROJECT }}

jobs:
  # ----------------------
  # Matrix: Fetch raw data per bill type
  # ----------------------
  fetch_billtext:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        bill_type: [hr, s, hjres, sjres, hconres, sconres, hres, sres]
      fail-fast: false

    steps:
      - name: Checkout Repo
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      - name: Install System Libs
        run: |
          sudo apt-get update -y
          sudo apt-get install -y python3-venv jq zip unzip

      - name: Create venv & install Congress tool
        run: |
          python -m venv env
          . env/bin/activate
          python -m pip install --upgrade pip
          python -m pip install "git+https://github.com/unitedstates/congress.git"
          python -m pip install -e .
          echo "PYTHON=./env/bin/python" >> $GITHUB_ENV
          echo "PYTHONUNBUFFERED=1" >> $GITHUB_ENV

      - name: Fetch GOVInfo Bill Text by type
        run: |
          set -euo pipefail
          . env/bin/activate
          IFS=',' read -ra CONS <<< "${CONGRESSES}"
          for C in "${CONS[@]}"; do
            echo "Fetching Congress $C, type ${{ matrix.bill_type }}"
            usc-run govinfo \
              --collections=BILLS \
              --congress="$C" \
              --bill-type=${{ matrix.bill_type }} \
              --store=mods,xml,text \
              --bulkdata="False" \
              || { echo "::error:: usc-run govinfo failed for Congress $C ${{ matrix.bill_type }}"; exit 1; }
          done

      # Upload raw `data/` from this job
      - name: Upload raw data artifact
        uses: actions/upload-artifact@v4
        with:
          name: billtext-${{ matrix.bill_type }}
          path: data/

  # ----------------------
  # Aggregation Job
  # ----------------------
  aggregate_billtext:
    runs-on: ubuntu-latest
    needs: fetch_billtext

    steps:
      - name: Checkout Repo
        uses: actions/checkout@v4

      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: data-raw

      - name: Merge artifacts into data/
        run: |
          mkdir -p data
          # Merge all bill types under a single "data/" tree
          for d in data-raw/*; do
            rsync -a "$d/" data/
          done
          echo "Merged data tree:"
          find data -maxdepth 4 | head -n 50

      - name: Run usc-run billtext
        run: |
          . env/bin/activate || python -m venv env && . env/bin/activate
          python -m pip install --upgrade pip
          python -m pip install "git+https://github.com/unitedstates/congress.git"
          python -m pip install -e .
          usc-run billtext

      - name: Build Latest Bill Text
        run: |
          . env/bin/activate
          $PYTHON -u scripts/latest-bill-text.py

      - name: Build manifests
        run: |
          . env/bin/activate
          $PYTHON -u scripts/build_manifests.py

      - name: Upload to GCS
        run: |
          set -euo pipefail
          PREFIX="${GCS_PREFIX%/}"
          TARGET_PREFIX="${PREFIX:+${PREFIX}/}data"
          gsutil -m rsync -r "latest_billtext" "gs://${GCS_BUCKET}/${TARGET_PREFIX}/"
          GS_PREFIX="${PREFIX:+${PREFIX}/}manifests"
          gsutil -m cp -n billtext-manifest.json "gs://${GCS_BUCKET}/${GS_PREFIX}/" || true
