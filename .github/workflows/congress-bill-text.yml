name: Collect Congress Bill Text (119)

on:
  workflow_dispatch: {}
  schedule:
    - cron: "30 9 * * *" # nightly (09:30 UTC)

concurrency:
  group: collect-congress-billtext
  cancel-in-progress: true

permissions:
  contents: read

env:
  CONGRESSES: ${{ secrets.CONGRESSES || '119' }}
  GCS_BUCKET: ${{ secrets.GCS_BUCKET || 'congress-legislative-data' }}
  GCS_PREFIX: ${{ secrets.GCS_PREFIX || 'congress-billtext-data' }}
  GCP_PROJECT: ${{ secrets.GCP_PROJECT }}

jobs:
  collect_billtext:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        bill_type: [hr, s, hjres, sjres, hconres, sconres, hres, sres]
      fail-fast: false   # ensures one type failing doesnâ€™t cancel the rest

    steps:
      - name: Checkout Repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      - name: Cache pip
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/pyproject.toml', '**/requirements*.txt', '**/setup.cfg', '**/setup.py') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install System Libs
        run: |
          set -euo pipefail
          sudo apt-get update -y
          sudo apt-get install -y python3-venv jq zip unzip

      - name: Create venv & install Congress tool + local package
        run: |
          set -euo pipefail
          python -m venv env
          . env/bin/activate
          python -m pip install --upgrade pip
          python -m pip install "git+https://github.com/unitedstates/congress.git"
          python -m pip install -e .
          echo "PYTHON=./env/bin/python" >> $GITHUB_ENV
          echo "PYTHONUNBUFFERED=1" >> $GITHUB_ENV

      - name: Verify required env
        run: |
          : "${GCP_PROJECT:?Missing required secret GCP_PROJECT}"
          : "${GCS_BUCKET:?Missing required GCS_BUCKET}"

      - name: Ensure data dir
        run: mkdir -p data

      - name: Fetch GOVInfo Bill Text (matrix by bill_type)
        run: |
          set -euo pipefail
          . env/bin/activate
          IFS=',' read -ra CONS <<< "${CONGRESSES}"
          for C in "${CONS[@]}"; do
            C="$(echo "$C" | xargs)"
            echo "Fetching BILLS text for Congress $C, type ${{ matrix.bill_type }}"
            usc-run govinfo \
              --collections=BILLS \
              --congress="$C" \
              --bill-type=${{ matrix.bill_type }} \
              --store=mods,xml,text \
              --bulkdata="False" \
              --update \
              || { echo "::error:: usc-run govinfo failed for Congress $C type ${{ matrix.bill_type }}"; exit 1; }
          done
          usc-run billtext || { echo "::error:: usc-run billtext failed"; exit 1; }

      - name: Upload Bill Text to GCS
        run: |
          set -euo pipefail
          PREFIX="${GCS_PREFIX%/}"
          TARGET_PREFIX="${PREFIX:+${PREFIX}/}data/${{ matrix.bill_type }}"
          echo "Uploading latest_billtext/${{ matrix.bill_type }} -> gs://${GCS_BUCKET}/${TARGET_PREFIX}/"
          gsutil -m rsync -r "latest_billtext" "gs://${GCS_BUCKET}/${TARGET_PREFIX}/"

      - name: Upload manifest to GCS
        run: |
          set -euo pipefail
          PREFIX="${GCS_PREFIX%/}"
          GS_PREFIX="${PREFIX:+${PREFIX}/}manifests"
          gsutil -m cp -n billtext-manifest.json "gs://${GCS_BUCKET}/${GS_PREFIX}/" || echo "::warning:: manifest upload may have failed"

      - name: Summary
        run: |
          COUNT_TEXT=$(find latest_billtext -type f -name data.json 2>/dev/null | wc -l || echo 0)
          echo "Completed billtext run for type ${{ matrix.bill_type }}."
          echo "latest_billtext JSON count: ${COUNT_TEXT}"
          echo "Bucket: ${GCS_BUCKET}"
          echo "Prefix: ${GCS_PREFIX}"
