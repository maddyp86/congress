name: Collect Congress Bills (118â€“119)

on:
  workflow_dispatch: {}
  schedule:
    - cron: "30 9 * * *" # nightly (09:30 UTC)
    - cron: "0 10 * * 0" # weekly (Sunday 10:00 UTC)

concurrency:
  group: collect-congress-bills
  cancel-in-progress: true

permissions:
  contents: read

jobs:
  collect_bills:
    runs-on: ubuntu-latest

    env:
      CONGRESSES: ${{ secrets.CONGRESSES || '118,119' }}
      GCS_BUCKET: ${{ secrets.GCS_BUCKET || 'congress-legislative-data' }}
      GCS_PREFIX: ${{ secrets.GCS_PREFIX || 'congress-bill-data' }}
      GCP_PROJECT: ${{ secrets.GCP_PROJECT }}

    steps:
      - name: Checkout Repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: Install System Libs
        run: |
          set -euo pipefail
          sudo apt-get update -y
          sudo apt-get install -y python3-venv jq zip

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Cache Pip
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('requirements*.txt', 'pyproject.toml', 'setup.cfg', 'setup.py') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install Congress Tool
        run: |
          set -euo pipefail
          python -m venv env
          . env/bin/activate
          python -m pip install --upgrade pip
          pip install "git+https://github.com/unitedstates/congress.git"

      - name: Verify Required Env
        run: |
          set -euo pipefail
          : "${GCP_PROJECT:?Missing required secret GCP_PROJECT}"
          : "${GCS_BUCKET:?Missing required GCS_BUCKET}"
          
      - name: Ensure data dir
        run: mkdir -p data

      - name: Fetch GovInfo BILLSTATUS
        run: |
          set -euo pipefail
          . env/bin/activate
          usc-run govinfo --bulkdata=BILLSTATUS --congress="${CONGRESSES}"

      - name: Process Bills
        run: |
          set -euo pipefail
          . env/bin/activate
          usc-run bills

      - name: Quick Bills Debug
        run: |
          set -euo pipefail
          echo "Bill metadata files (sample):"
          { find data -type f -path "*/bills/*/data.json" | sort | sed 's/^/  /' | head -n 100; } 2>/dev/null || true

      - name: Build manifests
        run: |
          set -euo pipefail
          . env/bin/activate
          python scripts/build_manifests.py
      
      - name: Quick Manifest Count
        run: |
          set -euo pipefail
          if [ -f bills-manifest.json ]; then
            echo "Bills files: $(jq '.files | length' bills-manifest.json || echo 0)"
          else
            echo "Bills manifest not found locally; skipping count."
          fi

      # --- GCP auth + upload (BILLS ONLY) ---
      - name: Authenticate to GCP
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      - name: Setup Gcloud
        uses: google-github-actions/setup-gcloud@v2
        with:
          project_id: ${{ env.GCP_PROJECT }}
          version: '>= 472.0.0'

      - name: Ensure Bucket Exists
        run: |
          set -euo pipefail
          gsutil ls -b "gs://${GCS_BUCKET}" >/dev/null 2>&1 || gsutil mb -p "${GCP_PROJECT}" "gs://${GCS_BUCKET}"

      # --- Upload (nightly / non-destructive) ---
      - name: Upload Bills to GCS
        if: ${{ github.event.schedule == '30 9 * * *' || github.event_name == 'workflow_dispatch' }}
        run: |
          set -euo pipefail
          PREFIX="${GCS_PREFIX%/}"
          TARGET_BASE="gs://${GCS_BUCKET}/${PREFIX:+${PREFIX}/}data"

          for C in data/*; do
            [ -d "$C/bills" ] || continue
            CONS="$(basename "$C")"
            echo "Uploading (no-delete) bills for Congress ${CONS} -> ${TARGET_BASE}/${CONS}/"
            # sync each bill type directory into <prefix>/data/<congress>/<type>/
            for TYPE_DIR in "$C"/bills/*; do
              [ -d "$TYPE_DIR" ] || continue
              TYPE_NAME="$(basename "$TYPE_DIR")"
              echo "  rsync (no-delete) $TYPE_DIR -> ${TARGET_BASE}/${CONS}/${TYPE_NAME}/"
              gsutil -m rsync -r "$TYPE_DIR" "${TARGET_BASE}/${CONS}/${TYPE_NAME}/"
            done
          done

          # upload manifests if present
          if [ -f bills-manifest.json ]; then
            gsutil cp bills-manifest.json bills-manifest-gcs.json "gs://${GCS_BUCKET}/${PREFIX}/" || true
          fi

      # --- Weekly full-refresh: dry-run then destructive prune ---
      - name: Upload Bills to GCS 
        if: ${{ github.event.schedule == '0 10 * * 0' }}
        run: |
          set -euo pipefail
          PREFIX="${GCS_PREFIX%/}"
          TARGET_BASE="gs://${GCS_BUCKET}/${PREFIX:+${PREFIX}/}data"
          TS=$(date -u +"%Y%m%dT%H%M%SZ")

          for C in data/*; do
            [ -d "$C/bills" ] || continue
            CONS="$(basename "$C")"
            echo "Previewing destructive sync for Congress ${CONS}: local=$C/bills -> remote=${TARGET_BASE}/${CONS}/"
            for TYPE_DIR in "$C"/bills/*; do
              [ -d "$TYPE_DIR" ] || continue
              TYPE_NAME="$(basename "$TYPE_DIR")"
              REMOTE="${TARGET_BASE}/${CONS}/${TYPE_NAME}/"
              echo "  Dry-run rsync -n $TYPE_DIR -> $REMOTE"
              gsutil -m rsync -r -n "$TYPE_DIR" "${REMOTE}" || true
            done
          done

          # upload manifests if present
          if [ -f bills-manifest.json ]; then
            gsutil cp bills-manifest.json bills-manifest-gcs.json "gs://${GCS_BUCKET}/${PREFIX}/" || true
          fi

      - name: Summary
        run: |
          set -euo pipefail
          COUNT_BILLS=$(jq '.files | length' bills-manifest.json 2>/dev/null || echo 0)
          echo "Uploaded bucket: ${GCS_BUCKET}"
          echo "Prefix: ${GCS_PREFIX}"
          echo "Bills files (manifest): ${COUNT_BILLS}"
